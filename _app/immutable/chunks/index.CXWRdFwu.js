import{W as n,r as l}from"./device.f1MsHf-I.js";class d extends n{async write(t){if(typeof navigator>"u"||!navigator.clipboard)throw this.unavailable("Clipboard API not available in this browser");if(t.string!==void 0)await this.writeText(t.string);else if(t.url)await this.writeText(t.url);else if(t.image)if(typeof ClipboardItem<"u")try{const a=await(await fetch(t.image)).blob(),e=new ClipboardItem({[a.type]:a});await navigator.clipboard.write([e])}catch{throw new Error("Failed to write image")}else throw this.unavailable("Writing images to the clipboard is not supported in this browser");else throw new Error("Nothing to write")}async read(){if(typeof navigator>"u"||!navigator.clipboard)throw this.unavailable("Clipboard API not available in this browser");if(typeof ClipboardItem<"u")try{const t=await navigator.clipboard.read(),a=t[0].types[0],e=await t[0].getType(a);return{value:await this._getBlobData(e,a),type:a}}catch{return this.readText()}else return this.readText()}async readText(){if(typeof navigator>"u"||!navigator.clipboard||!navigator.clipboard.readText)throw this.unavailable("Reading from clipboard not supported in this browser");return{value:await navigator.clipboard.readText(),type:"text/plain"}}async writeText(t){if(typeof navigator>"u"||!navigator.clipboard||!navigator.clipboard.writeText)throw this.unavailable("Writting to clipboard not supported in this browser");await navigator.clipboard.writeText(t)}_getBlobData(t,a){return new Promise((e,o)=>{const r=new FileReader;a.includes("image")?r.readAsDataURL(t):r.readAsText(t),r.onloadend=()=>{const i=r.result;e(i)},r.onerror=i=>{o(i)}})}}const p=l("Clipboard",{web:()=>new d});export{p as C};
