import{b as i,A as d}from"./store.DzamesA2.js";async function p(c,o={},n,r){const s=n||new AbortController;let a;try{return await fetch(c.href,{...o,signal:s.signal})}catch(e){throw e.name==="AbortError"&&console.error("Request timed out"),e}}async function g({value:c,type:o,typesOr:n,offset:r=0,limit:s=10,abortController:a}){const e=d,t=new URL(`${e}/embeddings/search`);t.searchParams.append("value",c),o&&t.searchParams.append("type",o),n&&t.searchParams.append("typesOr",n),r&&t.searchParams.append("offset",String(r)),s&&t.searchParams.append("limit",String(s));try{return(await(await p(t,{headers:{"x-api-version":i.EMBEDDING}},a)).json()).data}catch(h){return console.error(h),[]}}async function b({query:c,location:o,abortController:n,offset:r=0,limit:s=24}){const a=d,e=new URL(`${a}/places`);e.searchParams.append("query",c),e.searchParams.append("location",o),r&&e.searchParams.append("offset",String(r)),s&&e.searchParams.append("limit",String(s));try{return(await(await p(e,{headers:{"x-api-version":i.PLACE}},n||void 0)).json()).data}catch(t){return console.error(t),[]}}async function l({tags:c,bbox:o,abortController:n,offset:r=0,limit:s=100}){const a=d,e=new URL(`${a}/embeddings/explore`);e.searchParams.append("tags",c),e.searchParams.append("bbox",o),r&&e.searchParams.append("offset",String(r)),s&&e.searchParams.append("limit",String(s));try{return(await(await p(e,{headers:{"x-api-version":i.EMBEDDING}},n||void 0)).json()).data}catch(t){return t!=="new request"&&console.error(t),[]}}async function y({uniqueName:c,abortController:o,offset:n=0,limit:r=10}){const s=d,a=new URL(`${s}/embeddings/search/users`);a.searchParams.append("uniqueName",c),n&&a.searchParams.append("offset",String(n)),r&&a.searchParams.append("limit",String(r));try{return(await(await p(a,{headers:{"x-api-version":i.EMBEDDING}},o)).json()).data}catch(e){return console.error(e),[]}}async function f({boxName:c,abortController:o}){const n=d,r=new URL(`${n}/embeddings/search/boxes`);r.searchParams.append("boxName",c);try{return(await(await p(r,{headers:{"x-api-version":i.EMBEDDING}},o)).json()).data}catch(s){return console.error(s),[]}}async function P({value:c,offset:o=0,limit:n=12,abortController:r}){const s=d,a=new URL(`${s}/embeddings/search/tags`);a.searchParams.append("value",c),o&&a.searchParams.append("offset",String(o)),n&&a.searchParams.append("limit",String(n));try{return(await(await p(a,{headers:{"x-api-version":i.EMBEDDING}},r)).json()).data}catch(e){return console.error(e),[]}}export{P as a,b,f as c,y as d,l as e,g};
