import{A as i}from"./units.DgSnVFoF.js";async function d(t,o={},s,a){const r=s||new AbortController;let n;try{return await fetch(t,{...o,signal:r.signal})}catch(e){throw e.name==="AbortError"&&console.error("Request timed out"),e}}async function m({value:t,type:o,typesOr:s,limit:a=10}){const r=i,n=new URL(`${r}/embeddings/search`);n.searchParams.append("value",t),o&&n.searchParams.append("type",o),s&&n.searchParams.append("typesOr",s),a&&n.searchParams.append("limit",String(a));try{const e=await d(n,{credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"}});console.log(e);const c=await e.json();return console.log(c),c.data}catch(e){return console.error(e),[]}}async function h({query:t,location:o}){const s=i,a=new URL(`${s}/places`);a.searchParams.append("query",t),a.searchParams.append("location",o);try{return(await(await d(a)).json()).data}catch(r){return console.error(r),[]}}async function u({tags:t,bbox:o,abortController:s,offset:a=0,limit:r=100}){const n=i,e=new URL(`${n}/embeddings/explore`);e.searchParams.append("tags",t),e.searchParams.append("bbox",o),a&&e.searchParams.append("offset",String(a)),r&&e.searchParams.append("limit",String(r));try{return(await(await d(e,{},s||void 0)).json()).data}catch(c){return c!=="new request"&&console.error(c),[]}}export{m as a,h as b,u as g};
