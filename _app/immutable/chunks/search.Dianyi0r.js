import{A as i}from"./Header.FoXJ-u0t.js";async function d(o,s={},n,r){const t=n||new AbortController;let a;try{return await fetch(o,{...s,signal:t.signal})}catch(e){throw e.name==="AbortError"&&console.error("Request timed out"),e}}async function h({value:o,type:s,typesOr:n,limit:r=10,abortController:t}){const a=i,e=new URL(`${a}/embeddings/search`);e.searchParams.append("value",o),s&&e.searchParams.append("type",s),n&&e.searchParams.append("typesOr",n),r&&e.searchParams.append("limit",String(r));try{return(await(await d(e,{},t)).json()).data}catch(c){return console.error(c),[]}}async function l({query:o,location:s,abortController:n,options:r={offset:0,limit:24}}){const t=i,a=new URL(`${t}/places`);a.searchParams.append("query",o),a.searchParams.append("location",s),a.searchParams.append("offset",String(r.offset)),a.searchParams.append("limit",String(r.limit));try{return(await(await d(a,{},n||void 0)).json()).data}catch(e){return console.error(e),[]}}async function f({tags:o,bbox:s,abortController:n,offset:r=0,limit:t=100}){const a=i,e=new URL(`${a}/embeddings/explore`);e.searchParams.append("tags",o),e.searchParams.append("bbox",s),r&&e.searchParams.append("offset",String(r)),t&&e.searchParams.append("limit",String(t));try{return(await(await d(e,{},n||void 0)).json()).data}catch(c){return c!=="new request"&&console.error(c),[]}}export{l as a,h as b,d as f,f as g};
