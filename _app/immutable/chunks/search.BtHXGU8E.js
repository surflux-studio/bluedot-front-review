import{A as i}from"./units.DtuR4fdj.js";async function p(t,s={},o,a){const n=o||new AbortController;let r;try{return await fetch(t,{...s,signal:n.signal})}catch(e){throw e.name==="AbortError"&&console.error("Request timed out"),e}}async function m({value:t,type:s,typesOr:o,limit:a=10}){const n=i,r=new URL(`${n}/embeddings/search`);r.searchParams.append("value",t),s&&r.searchParams.append("type",s),o&&r.searchParams.append("typesOr",o),a&&r.searchParams.append("limit",String(a));try{const e=await p(r,{credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"}});console.log(e);const c=await e.json();return console.log(c),c.data}catch(e){return console.error(e),[]}}async function h({query:t,location:s}){const o=i,a=new URL(`${o}/places`);a.searchParams.append("query",t),a.searchParams.append("location",s),a.searchParams.append("offset","0"),a.searchParams.append("limit","24");try{return(await(await p(a)).json()).data}catch(n){return console.error(n),[]}}async function u({tags:t,bbox:s,abortController:o,offset:a=0,limit:n=100}){const r=i,e=new URL(`${r}/embeddings/explore`);e.searchParams.append("tags",t),e.searchParams.append("bbox",s),a&&e.searchParams.append("offset",String(a)),n&&e.searchParams.append("limit",String(n));try{return(await(await p(e,{},o||void 0)).json()).data}catch(c){return c!=="new request"&&console.error(c),[]}}export{m as a,h as b,p as f,u as g};
