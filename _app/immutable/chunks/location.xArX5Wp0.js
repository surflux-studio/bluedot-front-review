const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./web.BDV9kWiJ.js","./store.qu3tGfZB.js","./entry.GAN6ZX7x.js","./scheduler.BIy9gGKi.js","./preload-helper.D6kgxu3v.js","./web.GrdyFHtx.js"])))=>i.map(i=>d[i]);
var L=Object.defineProperty;var _=(o,t,e)=>t in o?L(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var d=(o,t,e)=>_(o,typeof t!="symbol"?t+"":t,e);import{r as g,C as f}from"./store.qu3tGfZB.js";import{_ as y}from"./preload-helper.D6kgxu3v.js";const w=g("Preferences",{web:()=>y(()=>import("./web.BDV9kWiJ.js"),__vite__mapDeps([0,1,2,3,4]),import.meta.url).then(o=>new o.PreferencesWeb)});function m(o){o.CapacitorUtils.Synapse=new Proxy({},{get(t,e){return new Proxy({},{get(l,n){return(c,s,i)=>{const a=o.Capacitor.Plugins[e];if(a===void 0){i(new Error(`Capacitor plugin ${e} not found`));return}if(typeof a[n]!="function"){i(new Error(`Method ${n} not found in Capacitor plugin ${e}`));return}(async()=>{try{const r=await a[n](c);s(r)}catch(r){i(r)}})()}}})}})}function P(o){o.CapacitorUtils.Synapse=new Proxy({},{get(t,e){return o.cordova.plugins[e]}})}function h(o=!1){window.CapacitorUtils=window.CapacitorUtils||{},window.Capacitor!==void 0&&!o?m(window):window.cordova!==void 0&&P(window)}const p=g("Geolocation",{web:()=>y(()=>import("./web.GrdyFHtx.js"),__vite__mapDeps([5,1,2,3,4]),import.meta.url).then(o=>new o.GeolocationWeb)});h();let u={latitude:0,longitude:0,accuracy:0,altitudeAccuracy:void 0,altitude:null,speed:null,heading:null};class C{static async getCurrentOrLastLocation(){const t=f.isNativePlatform()?await this.checkAndRequestGeolocationPermission():{location:"granted"};if((t==null?void 0:t.location)==="granted")try{const e=await p.getCurrentPosition({maximumAge:2e3}),{latitude:l,longitude:n,accuracy:c,altitudeAccuracy:s,altitude:i,speed:a,heading:r}=e.coords;return u={latitude:l,longitude:n,accuracy:c,altitudeAccuracy:s,altitude:i,speed:a,heading:r},this.saveLastKnownLocation(u),u}catch(e){return console.warn(e),this.getLastKnownLocation()}else return this.getLastKnownLocation()}static async checkAndRequestGeolocationPermission(){try{return await p.requestPermissions({permissions:["location"]})}catch{return null}}static saveLastKnownLocation(t){w.set({key:this.LAST_LOCATION_KEY,value:JSON.stringify(t)})}static async getLastKnownLocation(){const{value:t}=await w.get({key:this.LAST_LOCATION_KEY});return t?JSON.parse(t):null}}d(C,"LAST_LOCATION_KEY","last_known_location");export{C as L};
